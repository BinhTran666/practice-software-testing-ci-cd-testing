name: Run Playwright Tests 🎭

on:
  push:
    branches: [ main ]

concurrency: production_environment

jobs:
  test:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout ⚙️
        uses: actions/checkout@v4

      # Optional: speed up Docker builds with caching
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers 🧱
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Build Laravel image (prevents rebuild inside `up`)
      - name: Build Laravel API Image 🐘
        uses: docker/build-push-action@v5
        with:
          context: ./_docker
          file: ./_docker/app.docker
          tags: my-app/laravel-api:latest
          load: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Install Node ⚙️
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install Angular UI dependencies
        run: |
          cd UI
          npm ci

      - name: Install root dependencies
        run: |
          npm ci
          PLAYWRIGHT_VERSION=$(npm ls --json @playwright/test | jq --raw-output '.dependencies["@playwright/test"].version')
          echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> $GITHUB_ENV

      - name: 🧰 Cache Playwright browser binaries
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: "~/.cache/ms-playwright"
          key: "${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}"
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: 🏗 Install Playwright browser binaries & OS dependencies
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: |
          npx playwright install --with-deps

      - name: 🏗 Install Playwright OS dependencies
        if: steps.playwright-cache.outputs.cache-hit == 'true'
        run: |
          npx playwright install-deps

      - name: Start containers 🐳
        run: |
          export DISABLE_LOGGING=true
          docker compose -f docker-compose.yml up -d

      - name: Wait for Laravel API to be ready
        run: |
          docker run --rm --network host curlimages/curl:7.85.0 sh -c \
          'until curl -sSf http://localhost:8091/status; do echo "Waiting for API..."; sleep 5; done'

      - name: Create & Seed database 🌱
        run: |
          docker compose exec -T laravel-api php artisan migrate:refresh --seed

      - name: Run Playwright tests 🧪
        run: npx playwright test

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report 📊
          path: playwright-report/
          retention-days: 10
